/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/*
0 - 600px:       Phone
600 - 900px:     Tablet portrait
900 - 1200px:    Tablet Landscape
[1200 - 1800px]  is where our normal styles apply
1800px + :       Big desktop


 $breakpoint argument choices:

    - phone
    - tab-port
    - tab-land
    - big-desktop


ORDER: Base + typography > general layout + grid > page layout > components

    1em = 16px;
*/
@-webkit-keyframes jumpRight {
  0% {
    -webkit-transform: scale(0.97) translateY(-50%);
            transform: scale(0.97) translateY(-50%); }
  75% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(15px);
            transform: scale(0.97) translateY(-50%) translateX(15px); }
  100% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(0);
            transform: scale(0.97) translateY(-50%) translateX(0); } }
@keyframes jumpRight {
  0% {
    -webkit-transform: scale(0.97) translateY(-50%);
            transform: scale(0.97) translateY(-50%); }
  75% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(15px);
            transform: scale(0.97) translateY(-50%) translateX(15px); }
  100% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(0);
            transform: scale(0.97) translateY(-50%) translateX(0); } }

@-webkit-keyframes jumpLeft {
  0% {
    -webkit-transform: scale(0.97) translateY(-50%);
            transform: scale(0.97) translateY(-50%); }
  75% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(-15px);
            transform: scale(0.97) translateY(-50%) translateX(-15px); }
  100% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(0);
            transform: scale(0.97) translateY(-50%) translateX(0); } }

@keyframes jumpLeft {
  0% {
    -webkit-transform: scale(0.97) translateY(-50%);
            transform: scale(0.97) translateY(-50%); }
  75% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(-15px);
            transform: scale(0.97) translateY(-50%) translateX(-15px); }
  100% {
    -webkit-transform: scale(0.97) translateY(-50%) translateX(0);
            transform: scale(0.97) translateY(-50%) translateX(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }
  @media (max-width: 75em) {
    html {
      font-size: 56.25%; } }
  @media (max-width: 56.25em) {
    html {
      font-size: 50%; } }

body {
  box-sizing: border-box;
  background-color: #F2F2F2; }

::-moz-selection {
  background-color: #75C6BF;
  color: #fff; }

::selection {
  background-color: #75C6BF;
  color: #fff; }

a,
a:link,
a:visited {
  text-decoration: none;
  color: #fff; }
  a.referal-link,
  a:link.referal-link,
  a:visited.referal-link {
    text-decoration: underline; }
    a.referal-link:hover,
    a:link.referal-link:hover,
    a:visited.referal-link:hover {
      color: #E1524A; }

figure {
  margin: 0; }

body {
  font-family: 'Open Sans', sans-serif;
  line-height: 1.7;
  font-weight: 400;
  color: #777777; }

.u-fontw-big {
  font-weight: 800; }

.u-fontw-med {
  font-weight: 600; }

.u-fontw-norm {
  font-weight: 400; }

.u-color--gray {
  color: #7F8C8C !important; }

.u-bg--gray {
  background-color: #EBEBEB; }

.u-bg--gray1 {
  background-color: #AFB7B8; }

.u-flex--space-b {
  -webkit-box-pack: justify;
          justify-content: space-between; }

@media (max-width: 37.5em) {
  .u-hidden--xs {
    display: none !important; } }

@media (max-width: 56.25em) {
  .u-hidden--s {
    display: none !important; } }

@media (max-width: 75em) {
  .u-hidden--m {
    display: none !important; } }

@media (min-width: 112.5em) {
  .u-hidden--l {
    display: none !important; } }

.arrow-cloud {
  position: relative; }
  .arrow-cloud::before {
    content: "";
    position: absolute;
    z-index: 1;
    border: solid 10px transparent; }
  .arrow-cloud--top::before {
    top: -20px;
    left: 12px; }
  .arrow-cloud--top.arrow-cloud--green::before {
    border-bottom-color: #46a9a0; }
  .arrow-cloud--top.arrow-cloud--red::before {
    border-bottom-color: #dd3d34; }
  .arrow-cloud--bottom::before {
    bottom: -20px;
    left: 20px; }
  .arrow-cloud--bottom.arrow-cloud--white::before {
    border-top-color: #fff;
    border-right-color: #fff; }
  .arrow-cloud--green {
    background-color: #46a9a0; }
  .arrow-cloud--red {
    background-color: #dd3d34; }
  .arrow-cloud--white {
    background-color: #fff; }

.blog {
  color: #7F8C8C;
  margin: 4rem auto !important; }
  .blog:after {
    content: "";
    display: table;
    clear: both; }
  .blog__container, .blog__sidebar {
    float: left; }
  .blog__container {
    width: calc(100% - 21% - 3rem);
    margin-right: 3rem;
    position: relative; }
  .blog__sidebar {
    width: 21%; }
  .blog__post {
    padding-bottom: 4rem; }
    .blog__post:after {
      content: "";
      display: table;
      clear: both; }
    .blog__post > * {
      float: left; }
    .blog__post:not(:first-child) {
      padding: 4rem 0; }
    .blog__post:not(:last-child) {
      border-bottom: 3px solid #E4E5E5; }
  .blog__icons {
    margin-right: 4rem;
    line-height: 1.2; }
    .blog__icons > * {
      border-radius: 5px;
      display: -webkit-box;
      display: flex;
      -webkit-box-align: center;
              align-items: center;
      -webkit-box-pack: center;
              justify-content: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column;
      width: 7.5rem;
      height: 7.5rem; }
    .blog__icons > *:not(:last-child) {
      margin-bottom: 1rem; }
    .blog__icons--date {
      background-color: #F7F7F7;
      box-shadow: inset 0px -4px 0 #d1d1d1; }
      .blog__icons--date-month {
        font-size: 2rem; }
      .blog__icons--date-day {
        font-size: 3rem;
        font-weight: 800; }
    .blog__icons--category {
      background-color: #7F8B8B;
      box-shadow: inset 0px -4px 0 #5a6363; }
      .blog__icons--category i {
        color: #fff;
        font-size: 4rem;
        font-weight: normal; }
  .blog__main {
    width: 85%;
    font-size: 1.4rem; }
  .blog__image {
    width: 100%;
    max-height: 330px;
    overflow: hidden;
    border-radius: 5px;
    margin-bottom: 2rem; }
  .blog__headline {
    color: #75C6BF;
    font-size: 2.4rem;
    font-weight: 600;
    cursor: pointer; }
    .blog__headline:hover {
      color: #E1524A; }
  .blog__info a,
  .blog__info a:link,
  .blog__info a:visited, .blog__read, .blog__read:link, .blog__read:visited {
    color: #E1524A; }
  .blog__info {
    margin: .5rem 0 1.5rem 0; }
    .blog__info a {
      -webkit-transition: all .3s;
      transition: all .3s; }
    .blog__info a:hover {
      color: #75C6BF; }
    .blog__info a > i {
      margin: 0 .7rem 0 1.4rem;
      color: #75C6BF; }
  .blog__paragraph {
    margin-bottom: 2rem;
    line-height: 1.5; }
  .blog__read:hover {
    text-decoration: underline; }
  .blog__read i {
    font-weight: 800;
    margin-left: 1rem; }

.btn {
  -webkit-transition: all .15s;
  transition: all .15s;
  position: relative;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  z-index: 9;
  cursor: pointer;
  display: inline-block;
  border-radius: 6px; }
  .btn__main {
    padding: 1.2rem 5rem;
    font-size: 2rem; }
    .btn__main--caps {
      text-transform: uppercase;
      font-weight: 600; }
    .btn__main--small {
      padding: .8rem 1.4rem;
      font-size: unset;
      color: #fff; }
      .btn__main--small > i {
        font-size: 2rem;
        color: #fff; }
        .btn__main--small > i:not(:last-of-type) {
          margin-right: 2rem; }
    .btn__main.btn--gray {
      background-color: #AFB7B8; }
      .btn__main.btn--gray:hover {
        background-color: #e25a53;
        box-shadow: inset 0 -4px 0px rgba(191, 40, 32, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
    .btn__main.btn--red, .owl-carousel.owl-carousel-splash .btn__main.owl-prev,
    .owl-carousel.owl-carousel-splash .btn__main.owl-next {
      background-color: #E1524A; }
      .btn__main.btn--red:hover, .owl-carousel.owl-carousel-splash .btn__main.owl-prev:hover,
      .owl-carousel.owl-carousel-splash .btn__main.owl-next:hover {
        background-color: #e25a53;
        box-shadow: inset 0 -4px 0px rgba(191, 40, 32, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
    .btn__main.btn--green {
      background-color: #75C6BF; }
      .btn__main.btn--green:hover {
        background-color: #7cc9c2;
        box-shadow: inset 0 -4px 0px rgba(70, 169, 160, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .btn__spec.btn--green:hover {
    background-color: #46a9a0;
    box-shadow: inset 0 -4px 0px rgba(62, 151, 143, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .btn__spec.btn--green:active, .btn__spec.btn--green:focus {
    background-color: #E1524A;
    box-shadow: inset 0 -4px 0px rgba(191, 40, 32, 0.8), 0 2px 11px rgba(0, 0, 0, 0.8); }
  .btn__spec.btn--red:hover, .owl-carousel.owl-carousel-splash .btn__spec.owl-prev:hover,
  .owl-carousel.owl-carousel-splash .btn__spec.owl-next:hover, .btn__spec.btn--red:active, .owl-carousel.owl-carousel-splash .btn__spec.owl-prev:active,
  .owl-carousel.owl-carousel-splash .btn__spec.owl-next:active, .btn__spec.btn--red:focus, .owl-carousel.owl-carousel-splash .btn__spec.owl-prev:focus,
  .owl-carousel.owl-carousel-splash .btn__spec.owl-next:focus {
    background-color: #E1524A;
    box-shadow: inset 0 -4px 0px rgba(191, 40, 32, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .btn:hover {
    -webkit-transform: translateY(-3px);
            transform: translateY(-3px); }
  .btn:active {
    -webkit-transform: scale(0.97) translateY(-2px);
            transform: scale(0.97) translateY(-2px);
    box-shadow: 0 2px 1rem rgba(0, 0, 0, 0.8); }

.clients__headline {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  width: 100%; }
  .clients__headline--heading {
    display: inline-block; }
  .clients__headline--line {
    height: 1px;
    max-width: 70%;
    width: 100%;
    margin-left: 4rem;
    background: #E0E1E1;
    display: inline-block;
    position: relative; }
    .clients__headline--line::before {
      content: "";
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: #E0E1E1;
      position: absolute;
      top: 50%;
      -webkit-transform: translateY(-50%);
              transform: translateY(-50%);
      left: 0; }
    @media (max-width: 56.25em) {
      .clients__headline--line {
        max-width: 60%; } }
    @media (max-width: 37.5em) {
      .clients__headline--line {
        display: none; } }

.dropdown {
  position: relative; }
  @media (max-width: 45.25em) {
    .dropdown {
      display: none; } }
  .dropdown__menu {
    border-radius: 5px;
    top: 60px;
    left: 0;
    min-width: 170%;
    max-height: 0;
    -webkit-transition: all .4s;
    transition: all .4s;
    z-index: 999;
    opacity: 0;
    position: absolute; }
  .dropdown__list {
    display: block; }
  .dropdown__link {
    background-color: #E1524A;
    display: block;
    margin: 5px;
    border-radius: 5px;
    padding: .3rem 2rem;
    text-transform: none;
    visibility: hidden; }
    .dropdown__link:hover {
      background-color: #75C6BF; }
  .dropdown--shown .dropdown__menu {
    max-height: 25rem;
    overflow: visible;
    opacity: 1; }
  .dropdown--shown .dropdown__link {
    visibility: visible; }
  .dropdown--shown i {
    -webkit-transform: rotate(-180deg);
            transform: rotate(-180deg); }

.heading-floated {
  padding: 1.7rem 2.2rem; }
  .heading-floated:after {
    content: "";
    display: table;
    clear: both; }
  .heading-floated > div {
    float: left; }
  .heading-floated > a {
    float: right; }

.heading-primary {
  line-height: 1.45; }
  .heading-primary--main {
    color: #7F8C8C;
    font-size: 3rem;
    font-weight: 600; }
  .heading-primary--sub {
    color: #777777;
    font-size: 1.4rem;
    font-weight: 400;
    display: block; }

.heading-secondary {
  font-size: 4rem;
  font-weight: 600;
  color: #E1524A;
  text-align: center;
  text-transform: uppercase; }
  .heading-secondary__sub {
    color: #777777;
    display: block;
    font-size: 1.4rem;
    font-weight: 400;
    text-transform: none; }
  @media (max-width: 37.5em) {
    .heading-secondary {
      font-size: 3rem; } }

.heading-tertiary {
  font-weight: 800;
  color: #7F8C8C;
  font-size: 1.6rem; }

.heading-about {
  text-align: left;
  font-size: 3rem; }
  .heading-about .heading-secondary__sub {
    margin-top: 1rem; }

.hover-popup {
  position: relative;
  overflow: hidden; }
  .hover-popup__overlay {
    height: 100%;
    width: 100%;
    display: -webkit-box;
    display: flex;
    justify-content: space-around;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    padding: 0 2rem;
    position: absolute;
    bottom: -100%;
    left: 0;
    -webkit-transition: all .3s;
    transition: all .3s; }
    .hover-popup__overlay--color-primary {
      background-color: rgba(117, 198, 191, 0.85);
      box-shadow: inset 0 -4px 0px rgba(62, 151, 143, 0.8); }
  .hover-popup__container {
    text-align: center; }
  .hover-popup__centered {
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: center;
            align-items: center; }

.info-block {
  font-size: 1.4rem; }
  .info-block__list {
    margin-top: 3rem; }
    @media (max-width: 37.5em) {
      .info-block__list--item:not(:last-child) {
        margin-right: 3rem; } }
  .info-block__paragraph {
    margin: 0 auto;
    display: block;
    text-align: center; }
  .info-block__image {
    margin-top: 4rem;
    margin-left: auto;
    margin-right: auto;
    display: block; }
  .info-block__testimonial {
    margin-top: 2rem;
    padding: 1.5rem 1rem 1.5rem 2.2rem;
    border-radius: 4px;
    border: 1px solid rgba(0, 0, 0, 0.1); }
    .info-block__testimonial--paragraph {
      font-style: italic; }
    .info-block__testimonial--name {
      font-weight: 600;
      font-size: 1.6rem;
      color: #777777;
      display: block;
      position: absolute;
      margin-top: 2.2rem;
      left: 5rem;
      color: #75C6BF; }
  @media (max-width: 56.25em) {
    .info-block .row {
      display: -webkit-box !important;
      display: flex !important;
      flex-wrap: wrap !important;
      -webkit-box-pack: center;
              justify-content: center; }
    .info-block .flex-2 {
      -webkit-box-ordinal-group: 0 !important;
              order: -1 !important;
      -webkit-box-flex: 0;
              flex: 0 0 75%;
      margin-bottom: 5rem;
      padding-right: 0 !important;
      margin-right: 0 !important; }
    .info-block .flex-1 {
      width: 42% !important; } }

li {
  list-style: none; }

.list-style__arrow {
  display: inline-block;
  position: relative; }
  .list-style__arrow::before {
    margin-right: 1rem; }
  .list-style__arrow--flat::before {
    content: "\f061";
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
    color: #E1524A; }
  .list-style__arrow--circle::before {
    content: "\f0a9";
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
    color: #75C6BF;
    font-size: 1.4rem; }
  .list-style__arrow--angle-right::before {
    content: "\f105";
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
    color: #75C6BF;
    font-size: 1.4rem; }

.main-logo__item {
  font-size: 2.5rem; }
  .main-logo__item span {
    font-size: 3rem; }

.mixitup__controls {
  margin: 4.5rem 0; }

.mixitup__button {
  color: #fff;
  background-color: #7F8C8C;
  font-size: 1.4rem;
  padding: .8rem 2rem;
  text-transform: uppercase;
  font-weight: 600;
  font-family: 'Open Sans', sans-serif;
  border: none;
  cursor: pointer;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  position: relative;
  -webkit-transition: all .2s;
  transition: all .2s;
  box-shadow: inset 0 -4px 0px rgba(102, 114, 114, 0.8);
  border-radius: 5px; }
  .mixitup__button:not(:last-child) {
    margin-right: 1.5rem; }
  .mixitup__button:hover {
    -webkit-transform: translateY(-3px);
            transform: translateY(-3px);
    box-shadow: inset 0 -4px 0px rgba(213, 45, 35, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25);
    background-color: #E1524A; }
  .mixitup__button:active {
    -webkit-transform: translateY(-1px) scale(0.97);
            transform: translateY(-1px) scale(0.97); }
  .mixitup__button:focus {
    outline: transparent; }

.mixitup__image {
  width: 100%;
  display: block;
  border-radius: 5px;
  -webkit-transform: scale(0.96);
          transform: scale(0.96);
  -webkit-transition: all .3s;
  transition: all .3s; }

.mixitup__gallery {
  margin-bottom: 5rem; }
  .mixitup__gallery .mix {
    background-color: white;
    vertical-align: top;
    max-height: 311px;
    border-radius: 5px;
    margin: 0 1.5rem 3rem;
    float: left;
    border-top: 1px solid rgba(127, 140, 140, 0.4);
    border-left: 1px solid rgba(127, 140, 140, 0.4);
    border-right: 1px solid rgba(127, 140, 140, 0.4);
    position: relative;
    overflow: hidden;
    box-shadow: inset 0 -4px 0px rgba(102, 114, 114, 0.3), 0 4px 11px rgba(0, 0, 0, 0.25); }
    .mixitup__gallery .mix__links {
      display: -webkit-box;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
              flex-direction: row; }
    .mixitup__gallery .mix__links-items {
      font-size: 2.4rem;
      color: #fff;
      background-color: #46a9a0;
      width: 5rem;
      height: 5rem;
      border-radius: 3px;
      display: -webkit-box;
      display: flex;
      -webkit-box-align: center;
              align-items: center;
      -webkit-transition: all .3s;
      transition: all .3s;
      -webkit-box-pack: center;
              justify-content: center;
      box-shadow: 0px 1px 4rem rgba(0, 0, 0, 0.2); }
      .mixitup__gallery .mix__links-items:not(:last-child) {
        margin-right: 2rem; }
      .mixitup__gallery .mix__links-items:hover {
        background-color: #E1524A;
        -webkit-transform: translateY(-2px);
                transform: translateY(-2px); }
    .mixitup__gallery .mix__paragraph {
      color: #fff;
      font-size: 1.6rem;
      margin-top: 3rem; }
    .mixitup__gallery .mix:hover > .hover-popup__overlay {
      bottom: 0; }
    .mixitup__gallery .mix:hover .mixitup__image {
      -webkit-transform: scale(1);
              transform: scale(1); }

.mixitup-control-active {
  background-color: #46a9a0;
  box-shadow: inset 0 -4px 0px rgba(40, 97, 92, 0.8); }
  .mixitup-control-active:hover {
    background-color: #46a9a0;
    box-shadow: inset 0 -5px 0px rgba(40, 97, 92, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .mixitup-control-active:active {
    box-shadow: inset 0 -1px 0px rgba(40, 97, 92, 0.8), 0 2px 11px rgba(0, 0, 0, 0.8); }

.main-navigation {
  display: -webkit-box;
  display: flex;
  width: 100%;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -webkit-box-align: end;
          align-items: flex-end; }
  .main-navigation__list {
    display: -webkit-box;
    display: flex; }
  .main-navigation__item {
    font-size: 1.4rem;
    text-transform: uppercase;
    letter-spacing: .6px; }
    .main-navigation__item:not(:last-of-type) {
      margin-right: .6rem; }
    .main-navigation__item i {
      position: relative;
      left: -9px;
      font-size: 1.5rem;
      -webkit-transition: all .3s;
      transition: all .3s; }
  .main-navigation__link {
    display: inline-block;
    padding: .8rem 2.2rem;
    border-radius: 5px; }

.nav-mobile__input {
  display: none; }

.nav-mobile__button {
  display: none;
  z-index: 100;
  color: #fff;
  font-size: 2rem;
  position: fixed;
  left: 3rem;
  top: 2.6rem;
  background-color: rgba(225, 82, 74, 0.65);
  height: 3.8rem;
  border-radius: 3px;
  width: 4rem; }
  @media (max-width: 45.25em) {
    .nav-mobile__button {
      display: block; } }

.nav-mobile__icon {
  position: relative;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }
  .nav-mobile__icon, .nav-mobile__icon::before, .nav-mobile__icon::after {
    width: 2rem;
    height: 2.1px;
    background-color: #fff;
    display: inline-block; }
  .nav-mobile__icon::before, .nav-mobile__icon::after {
    content: "";
    position: absolute;
    left: 0;
    -webkit-transition: all .2s;
    transition: all .2s; }
  .nav-mobile__icon::before {
    top: -.8rem; }
  .nav-mobile__icon::after {
    top: .8rem; }
  .nav-mobile__icon-text {
    opacity: 0;
    visibility: hidden;
    -webkit-transition: -webkit-transform .2s;
    transition: -webkit-transform .2s;
    transition: transform .2s;
    transition: transform .2s, -webkit-transform .2s;
    font-size: 1.3rem;
    -webkit-transform: translate(3.5px, 20px);
            transform: translate(3.5px, 20px); }

.nav-mobile__input:checked + .nav-mobile__button {
  background-color: #E1524A; }

.nav-mobile__input:checked + .nav-mobile__button .nav-mobile__icon {
  background-color: transparent; }

.nav-mobile__input:checked + .nav-mobile__button .nav-mobile__icon:before {
  top: 0;
  -webkit-transform: rotate(135deg);
          transform: rotate(135deg); }

.nav-mobile__input:checked + .nav-mobile__button .nav-mobile__icon:after {
  top: 0;
  -webkit-transform: rotate(-135deg);
          transform: rotate(-135deg); }

.nav-mobile__input:checked + .nav-mobile__button .nav-mobile__icon-text {
  display: inline-block;
  -webkit-transform: translate(3.5px, -6px);
          transform: translate(3.5px, -6px);
  opacity: 1;
  visibility: visible; }

.nav-mobile__input:checked ~ .header__navigation {
  width: 55%;
  visibility: visible;
  opacity: 1; }

.nav-mobile__input:checked ~ .header__navigation .search__button {
  background-color: transparent;
  box-shadow: none; }

.nav-mobile__input:checked ~ .header__navigation .header__search {
  position: absolute;
  left: 2rem;
  bottom: 7rem; }

.nav-mobile__input:checked ~ .background {
  width: 100%; }

@media (max-width: 45.25em) {
  .main-navigation {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    flex-wrap: wrap;
    visibility: hidden;
    opacity: 0;
    width: 0;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba(117, 198, 191, 0.95);
    z-index: 50;
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: center;
            align-items: center;
    -webkit-transition: all .3s;
    transition: all .3s;
    padding-left: 1.5rem;
    border-right: 6px solid rgba(99, 191, 183, 0.85);
    box-shadow: 2px 0px 9px 0px rgba(0, 0, 0, 0.58); }
    .main-navigation__list {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column;
      width: 100%; }
    .main-navigation__item {
      margin: 0; }
      .main-navigation__item i {
        display: none; }
  .background {
    position: fixed;
    width: 0;
    -webkit-transition: all .1s .2s;
    transition: all .1s .2s;
    height: 100vh;
    top: 0;
    left: 0;
    z-index: 45;
    background-color: rgba(255, 255, 255, 0.85); } }

.overlay__link {
  position: relative;
  -webkit-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all .15s .1s;
  transition: all .15s .1s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  cursor: pointer; }
  .overlay__link::after {
    content: "\f0c1";
    font-family: fontAwesome;
    background-color: rgba(117, 198, 191, 0.45);
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: center;
            align-items: center;
    font-size: 1.85rem;
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transition: -webkit-transform .2s;
    transition: -webkit-transform .2s;
    transition: transform .2s;
    transition: transform .2s, -webkit-transform .2s;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    cursor: pointer; }
  .overlay__link:hover {
    -webkit-transform: scale(1.08);
            transform: scale(1.08); }
  .overlay__link:hover::after {
    -webkit-transform: scale(1);
            transform: scale(1); }

.owl-carousel {
  position: relative; }
  .owl-carousel__item {
    background-size: cover;
    height: 50rem;
    background-repeat: no-repeat;
    background-position: center; }
    .owl-carousel__item--1 {
      background-image: url("../img/splash-1-1x.jpg"); }
    .owl-carousel__item--2 {
      background-image: url("../img/splash-2-1x.jpg"); }
    .owl-carousel__item--3 {
      background-image: url("../img/splash-3-1x.jpg"); }
  .owl-carousel__text {
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    text-align: center;
    color: #fff; }
  .owl-carousel--main {
    background: #E1524A;
    font-size: 5rem;
    display: inline-block;
    text-transform: uppercase;
    line-height: 1.4;
    padding: 0 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem; }
  .owl-carousel--sub {
    background-color: rgba(0, 0, 0, 0.7);
    font-size: 1.6rem;
    text-align: center;
    padding: .6rem 3rem;
    border-radius: 8px; }
  .owl-carousel.owl-carousel-splash .owl-prev,
  .owl-carousel.owl-carousel-splash .owl-next {
    position: absolute;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 5rem;
    height: 6rem;
    z-index: 10; }
    .owl-carousel.owl-carousel-splash .owl-prev::after,
    .owl-carousel.owl-carousel-splash .owl-next::after {
      color: #fff;
      font-size: 3.5rem;
      font-family: "Font Awesome 5 Free";
      font-weight: 900;
      background-color: #E1524A;
      display: block;
      width: 5rem;
      height: 6rem;
      text-align: center;
      position: absolute;
      left: 0;
      top: 0;
      -webkit-transition: all .3s;
      transition: all .3s;
      z-index: 9; }
    .owl-carousel.owl-carousel-splash .owl-prev:hover::after,
    .owl-carousel.owl-carousel-splash .owl-next:hover::after {
      background-color: #e56760;
      box-shadow: inset 0 -4px 0px rgba(169, 35, 28, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .owl-carousel.owl-carousel-splash .owl-prev {
    left: 0;
    border-radius: 0 8px 8px 0; }
    .owl-carousel.owl-carousel-splash .owl-prev::before {
      border-radius: 0 8px 8px 0; }
    .owl-carousel.owl-carousel-splash .owl-prev::after {
      content: "\f104";
      border-radius: 0 8px 8px 0; }
    .owl-carousel.owl-carousel-splash .owl-prev:hover {
      -webkit-animation-name: jumpRight;
              animation-name: jumpRight;
      -webkit-animation-duration: .7s;
              animation-duration: .7s;
      -webkit-animation-timing-function: ease-in;
              animation-timing-function: ease-in;
      -webkit-animation-iteration-count: 3;
              animation-iteration-count: 3;
      box-shadow: 2px 4px 2.5rem rgba(0, 0, 0, 0.8); }
    .owl-carousel.owl-carousel-splash .owl-prev:active {
      -webkit-transform: scale(0.95) translateY(-50%);
              transform: scale(0.95) translateY(-50%); }
  .owl-carousel.owl-carousel-splash .owl-next {
    right: 0;
    border-radius: 8px 0 0 8px; }
    .owl-carousel.owl-carousel-splash .owl-next::before {
      border-radius: 8px 0 0 8px; }
    .owl-carousel.owl-carousel-splash .owl-next::after {
      content: "\f105";
      border-radius: 8px 0 0 8px; }
    .owl-carousel.owl-carousel-splash .owl-next:hover {
      -webkit-animation-name: jumpLeft;
              animation-name: jumpLeft;
      -webkit-animation-duration: .7s;
              animation-duration: .7s;
      -webkit-animation-timing-function: ease-in;
              animation-timing-function: ease-in;
      -webkit-animation-iteration-count: 3;
              animation-iteration-count: 3;
      box-shadow: 2px 4px 2.5rem rgba(0, 0, 0, 0.8); }
    .owl-carousel.owl-carousel-splash .owl-next:active {
      -webkit-transform: scale(0.95) translateY(-50%);
              transform: scale(0.95) translateY(-50%); }
  .owl-carousel.owl-carousel-splash .owl-dots {
    position: absolute;
    left: 50%;
    bottom: -2.5rem;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%); }
    .owl-carousel.owl-carousel-splash .owl-dots:after {
      content: "";
      display: table;
      clear: both; }
  .owl-carousel.owl-carousel-splash .owl-dot {
    width: 5rem;
    height: 5px;
    background-color: #AFB7B8;
    float: left; }
    .owl-carousel.owl-carousel-splash .owl-dot:not(:last-of-type) {
      margin-right: 2rem; }
    .owl-carousel.owl-carousel-splash .owl-dot.active {
      background-color: #E1524A; }

.owl-carousel-logos {
  margin: 3.5rem 0; }
  @media (max-width: 37.5em) {
    .owl-carousel-logos {
      display: none; } }
  .owl-carousel-logos--item {
    background-image: url("../img/jquery.png"), #fff;
    background-color: rgba(255, 255, 255, 0.2);
    height: 15rem;
    border-radius: 4px;
    background-position: center;
    background-repeat: no-repeat;
    background-size: 45%;
    border: 1px solid rgba(119, 119, 119, 0.1);
    cursor: pointer; }
    .owl-carousel-logos--item:hover {
      background-color: #fff; }
    .owl-carousel-logos--item-1 {
      background-image: url("../img/fist_logo.png"); }
    .owl-carousel-logos--item-2 {
      background-image: url("../img/shades.png"); }
    .owl-carousel-logos--item-3 {
      background-image: url("../img/natureisland.png");
      background-size: 60%; }
    .owl-carousel-logos--item-4 {
      background-image: url("../img/feather.png");
      background-size: 60%; }
    .owl-carousel-logos--item-5 {
      background-image: url("../img/coffee.png"); }
    .owl-carousel-logos--item-6 {
      background-image: url("../img/nicewrite.png"); }
    .owl-carousel-logos--item-7 {
      background-image: url("../img/babyhero.png"); }
  .owl-carousel-logos .owl-nav {
    position: absolute;
    right: 0;
    top: -6rem;
    right: 3.5rem;
    display: -webkit-box;
    display: flex; }
  .owl-carousel-logos .owl-prev,
  .owl-carousel-logos .owl-next {
    position: relative;
    z-index: 9;
    color: transparent; }
    .owl-carousel-logos .owl-prev::after,
    .owl-carousel-logos .owl-next::after {
      background: #7F8C8C;
      display: inline-block;
      font-family: "Font Awesome 5 Free";
      font-weight: 900;
      font-size: 1.5rem;
      width: 2.5rem;
      height: 2.5rem;
      color: white;
      position: absolute;
      text-align: center;
      border-radius: 4px;
      overflow: hidden;
      z-index: 2;
      -webkit-transition: all .15s;
      transition: all .15s; }
    .owl-carousel-logos .owl-prev:not(:last-of-type),
    .owl-carousel-logos .owl-next:not(:last-of-type) {
      margin-right: 1.4rem; }
    .owl-carousel-logos .owl-prev:hover::after,
    .owl-carousel-logos .owl-next:hover::after {
      background-color: #E1524A;
      box-shadow: inset 0 -2px 0px rgba(191, 40, 32, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25);
      -webkit-transform: translateY(-3px);
              transform: translateY(-3px); }
  .owl-carousel-logos .owl-prev::after {
    content: "\f104";
    left: 0;
    margin-right: 1.4rem; }
  .owl-carousel-logos .owl-next::after {
    content: "\f105";
    right: 0; }

.pricing-table {
  margin-top: 7rem;
  background-color: #fff;
  position: relative;
  padding: 8rem 3rem;
  text-align: center;
  border-radius: 5px;
  -webkit-transition: all .3s;
  transition: all .3s;
  box-shadow: inset 0 -4px 0px rgba(217, 217, 217, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .pricing-table:hover {
    background-color: #75C6BF;
    color: #fff;
    box-shadow: inset 0 -4px 0px rgba(70, 169, 160, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .pricing-table:hover > .pricing-table__title,
  .pricing-table:hover > .pricing-table__cta {
    background-color: #E1524A;
    box-shadow: inset 0 -4px 0px rgba(191, 40, 32, 0.8), 0 3px 1rem rgba(0, 0, 0, 0.5); }
  .pricing-table__title, .pricing-table__cta {
    background-color: #7F8C8C;
    font-size: 1.6rem;
    color: #fff;
    padding: 1.5rem 4rem;
    position: absolute;
    width: 80%;
    -webkit-transition: all .3s;
    transition: all .3s; }
  .pricing-table__title {
    cursor: default;
    text-transform: uppercase;
    top: 0;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
    .pricing-table__title:hover {
      -webkit-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%); }
  .pricing-table__list-item {
    display: block;
    text-align: center;
    padding: 1rem 2rem;
    border-bottom: 1px solid rgba(119, 119, 119, 0.3);
    font-size: 1.4rem; }
  .pricing-table__cta {
    bottom: 0;
    left: 50%;
    -webkit-transform: translate(-50%, 50%);
            transform: translate(-50%, 50%);
    box-shadow: inset 0 -4px 0px rgba(90, 100, 100, 0.8), 0 3px 1rem rgba(0, 0, 0, 0.5); }
    .pricing-table__cta:hover {
      -webkit-transform: translate(-50%, 46%);
              transform: translate(-50%, 46%);
      background-color: #E1524A;
      box-shadow: 0 5px 1rem rgba(0, 0, 0, 0.5); }

.ruler {
  position: relative; }
  .ruler::before {
    display: block;
    width: 100%; }
  .ruler--top::before {
    content: "";
    background: url("../img/ruler2.png") repeat-x top;
    position: absolute;
    top: 0; }

.search {
  position: relative; }
  .search__button {
    display: inline-block;
    padding: 1rem 1.5rem;
    border-radius: 5px;
    font-size: 1.5rem; }
  .search__dummy {
    display: none; }
  .search__input {
    position: absolute;
    right: 0;
    top: 5.5rem;
    border: 4.5px solid #E1524A;
    visibility: hidden;
    opacity: 0;
    -webkit-transition: all .4s;
    transition: all .4s;
    border-radius: 5px;
    padding: 1rem;
    z-index: 999; }
    @media (max-width: 45.25em) {
      .search__input {
        left: 0;
        right: auto;
        border: 4.5px solid #E1524A; } }
  .search__dummy:checked ~ .search__input {
    visibility: visible;
    opacity: 1; }

.services {
  position: relative;
  background-color: #F7F7F7;
  padding: 3.75rem 1.2rem 10rem 1.2rem;
  text-align: center;
  border-radius: 6px;
  cursor: pointer;
  -webkit-transition: all .3s;
  transition: all .3s;
  border: 1px solid rgba(119, 119, 119, 0.15);
  box-shadow: inset 0px -4px 0px rgba(0, 0, 0, 0.15); }
  @media (max-width: 37.5em) {
    .services {
      padding: 1.5rem 3rem 5rem 3rem;
      width: 85%;
      margin: 0 auto; } }
  .services__icon {
    font-size: 5rem;
    color: #75C6BF;
    -webkit-transition: color .4s;
    transition: color .4s; }
    @media (max-width: 37.5em) {
      .services__icon {
        font-size: 3.5rem; } }
  .services__heading {
    margin-bottom: 2.4rem;
    text-transform: uppercase; }
  .services__btn {
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%) rotateX(0deg);
            transform: translateX(-50%) rotateX(0deg);
    width: 65%;
    display: inline-block;
    font-size: 1.4rem;
    font-weight: 600;
    bottom: -2.3rem;
    z-index: 10;
    padding: 1.5rem;
    -webkit-transition: all .15s;
    transition: all .15s; }
    .services__btn:hover {
      -webkit-transform: translateX(-50%) translateY(-2px);
              transform: translateX(-50%) translateY(-2px); }
    .services__btn:active {
      -webkit-transform: translateX(-50%) translateY(-2px) scale(0.97);
              transform: translateX(-50%) translateY(-2px) scale(0.97); }
  .services__paragraph {
    font-size: 1.4rem;
    color: #777;
    padding: 0 .2rem;
    word-wrap: break-word; }
  .services:hover {
    background-color: #fff;
    border-color: #f2f2f2; }
    .services:hover > .services__icon {
      color: #E1524A; }
    .services:hover > .services__btn.btn__main.btn--green {
      background-color: #E1524A; }
      .services:hover > .services__btn.btn__main.btn--green:hover {
        box-shadow: inset 0 -4px 0px rgba(191, 40, 32, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25);
        -webkit-transform: translateY(-2px) translateX(-50%) rotateX(0deg);
                transform: translateY(-2px) translateX(-50%) rotateX(0deg); }

.showcase {
  width: 85%;
  display: -webkit-box;
  display: flex;
  position: relative;
  top: 5rem;
  margin: 4rem auto 0 auto; }
  @media (max-width: 56.25em) {
    .showcase {
      width: 95%; } }
  .showcase__item {
    background: #C1C7C8;
    max-width: 33.33%;
    padding: 3.5rem .3rem .5rem .3rem;
    display: inline-block;
    border-radius: 1rem;
    z-index: 1;
    -webkit-transition: all .3s;
    transition: all .3s;
    position: relative;
    border: 1px solid rgba(0, 0, 0, 0.1);
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; }
    .showcase__item:hover {
      -webkit-transform: scale(1.4);
              transform: scale(1.4);
      z-index: 10;
      background: #d4d8d9;
      box-shadow: 0.2rem 0.3rem 0.8rem rgba(0, 0, 0, 0.4); }
    .showcase__item--1 {
      -webkit-box-ordinal-group: 2;
              order: 1; }
      .showcase__item--1:hover ~ .showcase__item--3 {
        -webkit-transform: scale(1);
                transform: scale(1); }
    .showcase__item--2 {
      -webkit-box-ordinal-group: 4;
              order: 3; }
      .showcase__item--2:hover ~ .showcase__item--3 {
        -webkit-transform: scale(1);
                transform: scale(1); }
    .showcase__item--3 {
      z-index: 2;
      -webkit-transform: scale(1.25);
              transform: scale(1.25);
      -webkit-box-ordinal-group: 3;
              order: 2; }
  .showcase__img {
    width: 100%;
    border-radius: 1rem;
    margin-bottom: 0;
    display: block; }
  .showcase__decor {
    position: absolute;
    top: .7rem;
    width: 100%; }
    .showcase__decor--circle {
      width: 1rem;
      height: 1rem;
      border-radius: 50%;
      background-color: #fff;
      display: inline-block;
      margin-right: .2rem; }
      .showcase__decor--circle:first-child {
        margin-left: 1rem; }
    .showcase__decor--circle-1 {
      height: .8rem;
      width: 1.4rem;
      background-color: #fff;
      border-radius: 32%;
      display: inline-block;
      position: absolute;
      right: 1.7rem;
      top: .7rem; }

.team-composition-holder {
  position: relative;
  margin: 6rem 0; }
  .team-composition-holder:hover > .hover-popup .hover-popup__overlay {
    bottom: 0; }

.team-composition {
  margin: 0 auto;
  max-height: 310px;
  width: 270px;
  border-radius: 3px;
  overflow: hidden;
  position: relative;
  color: #fff;
  background-color: #75C6BF;
  box-shadow: inset 0 -4px 0px rgba(81, 183, 174, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
  .team-composition__overlay p {
    font-style: italic;
    font-weight: 400;
    font-size: 1.2rem; }
  .team-composition__photo {
    -webkit-transition: all .3s;
    transition: all .3s;
    -webkit-transform: scale(1.1);
            transform: scale(1.1); }
  .team-composition:hover .team-composition__photo {
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-filter: blur(2px);
            filter: blur(2px); }
  .team-composition__social {
    display: -webkit-box;
    display: flex;
    justify-content: space-around; }
    .team-composition__social-item, .team-composition__social-item:link, .team-composition__social-visited {
      font-size: 1.5rem;
      background-color: #37857e;
      width: 4rem;
      height: 4rem;
      border-radius: 1rem;
      display: -webkit-box;
      display: flex;
      -webkit-box-align: center;
              align-items: center;
      -webkit-box-pack: center;
              justify-content: center;
      -webkit-transition: all .3s;
      transition: all .3s; }
      .team-composition__social-item:not(:last-child), .team-composition__social-item:link:not(:last-child), .team-composition__social-visited:not(:last-child) {
        margin-right: .2rem; }
      .team-composition__social-item:hover, .team-composition__social-item:link:hover, .team-composition__social-visited:hover {
        background-color: #E1524A;
        -webkit-transform: translateY(-2px);
                transform: translateY(-2px);
        box-shadow: inset 0 -4px 0px rgba(125, 26, 21, 0.8), 0 1px 2rem rgba(0, 0, 0, 0.8); }
      .team-composition__social-item:active, .team-composition__social-item:link:active, .team-composition__social-visited:active {
        box-shadow: inset 0 -4px 0px rgba(125, 26, 21, 0.8), 0 1px 1rem rgba(0, 0, 0, 0.9);
        -webkit-transform: scale(0.95);
                transform: scale(0.95); }
  .team-composition__btn {
    font-size: 1.3rem;
    padding: 1rem 2rem;
    position: absolute;
    bottom: -25px;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    box-shadow: inset 0 -4px 0px rgba(78, 87, 87, 0.8), 0 4px 11px rgba(0, 0, 0, 0.25); }
    .team-composition__btn:not(:hover) {
      background-color: #7F8C8C !important; }
    .team-composition__btn:hover {
      -webkit-transform: translate(-50%, -3px);
              transform: translate(-50%, -3px); }
    .team-composition__btn:active {
      -webkit-transform: translate(-50%, -1px) scale(0.97);
              transform: translate(-50%, -1px) scale(0.97);
      box-shadow: inset 0 -4px 0px rgba(78, 87, 87, 0.8), 0 1px 11px rgba(0, 0, 0, 0.9); }

.flex-container {
  max-width: 117rem;
  display: -webkit-box;
  display: flex;
  margin: 0 auto;
  -webkit-box-align: center;
          align-items: center; }
  @media (max-width: 75em) {
    .flex-container {
      padding: 0 1.5rem; } }
  @media (max-width: 56.25em) {
    .flex-container {
      max-width: 100% !important; } }

.footer {
  color: #fff; }
  @media (max-width: 37.5em) {
    .footer {
      background-color: #75C6BF; } }
  .footer::before {
    height: 2rem;
    opacity: .2; }
  .footer-info {
    background-color: #75C6BF;
    font-size: 1.4rem;
    padding: 3rem 0 4rem 0; }
    @media (max-width: 56.25em) {
      .footer-info .row .col-md-half {
        width: 48% !important; } }
    @media (max-width: 37.5em) {
      .footer-info {
        width: 80%;
        margin: 0 auto; }
        .footer-info .row .col-md-half {
          width: 100% !important; } }
    .footer-info__logo {
      margin-bottom: 2rem; }
    .footer-info__nav {
      padding-top: 1.3rem; }
      .footer-info__nav:first-child {
        float: left; }
      .footer-info__nav:last-child {
        float: right;
        margin-right: 2.5rem; }
      .footer-info__nav--heading {
        font-size: 2rem;
        color: #3B6360; }
      .footer-info__nav--list {
        padding-top: 2.22rem;
        padding-left: 2.2rem; }
      .footer-info__nav--item {
        padding-left: 1.3rem;
        display: block; }
        .footer-info__nav--item:not(:last-child) {
          margin-bottom: .55rem; }
      .footer-info__nav--link {
        display: inline-block;
        -webkit-transition: all .25s;
        transition: all .25s;
        border-bottom: 1px solid transparent;
        -webkit-backface-visibility: hidden;
                backface-visibility: hidden;
        -webkit-transform: rotateX(0deg);
                transform: rotateX(0deg);
        position: relative; }
        .footer-info__nav--link:before {
          content: "\f105";
          font-family: "Font Awesome 5 Free";
          font-weight: 900;
          font-size: 1rem;
          color: white;
          position: absolute;
          left: -12px;
          top: 2.5px;
          -webkit-transition: -webkit-transform .15s;
          transition: -webkit-transform .15s;
          transition: transform .15s;
          transition: transform .15s, -webkit-transform .15s; }
        .footer-info__nav--link:hover {
          color: #E1524A;
          -webkit-transform: translateY(-2px) scale(1.03);
                  transform: translateY(-2px) scale(1.03);
          border-bottom: 1px solid #E1524A; }
        .footer-info__nav--link:hover:before {
          right: -12px;
          top: 5.5px;
          left: unset;
          -webkit-transform: rotate(180deg);
                  transform: rotate(180deg);
          color: #E1524A; }
    .footer-info__blog {
      width: 90%;
      margin: 0 0 0 auto;
      padding-top: 1.3rem; }
      @media (max-width: 37.5em) {
        .footer-info__blog {
          width: 100%;
          margin: 0;
          padding: 0; } }
      .footer-info__blog--heading {
        font-size: 2rem;
        font-style: italic;
        margin-bottom: 2.5rem; }
        .footer-info__blog--heading > span {
          font-weight: 800;
          text-transform: uppercase;
          font-style: normal;
          margin-left: .5rem; }
      .footer-info__blog--wrapper {
        display: inline-block; }
        .footer-info__blog--wrapper:after {
          content: "";
          display: table;
          clear: both; }
        .footer-info__blog--wrapper:not(:last-child) {
          margin-bottom: 3.5rem; }
          @media (max-width: 37.5em) {
            .footer-info__blog--wrapper:not(:last-child) {
              margin-bottom: 2rem; } }
      .footer-info__blog--image {
        width: auto;
        max-width: 100px;
        max-height: 70px;
        border-radius: 3px;
        display: inline-block;
        overflow: hidden;
        float: left;
        margin-right: 2rem; }
        .footer-info__blog--image > img {
          width: 100%;
          display: block; }
      .footer-info__blog--description {
        line-height: 1.3;
        margin-bottom: .35rem; }
      .footer-info__blog--date {
        color: #3B6360;
        font-weight: 600; }
    .footer-info--contact {
      margin-top: 2rem; }
      .footer-info--contact p > span {
        font-size: 2rem;
        font-weight: 600;
        font-style: italic;
        margin-left: 1.9rem; }
  .footer__credentials {
    background-color: #3e978f;
    padding: 1.5rem 0; }
    .footer__credentials:after {
      content: "";
      display: table;
      clear: both; }
    .footer__credentials--info {
      float: left;
      font-size: 1.4rem; }
    .footer__credentials--social {
      float: right;
      font-size: 2.2rem; }
      .footer__credentials--social > a {
        color: rgba(255, 255, 255, 0.65);
        -webkit-transition: all .2s;
        transition: all .2s; }
        .footer__credentials--social > a:hover {
          color: #fff; }
      .footer__credentials--social > a:not(:last-child) {
        margin-right: 1.5rem; }

.row {
  max-width: 117rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
    @media (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 6rem; } }
  @media (max-width: 75em) {
    .row {
      padding: 0 1.5rem; } }
  .row:after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 3rem; }
      @media (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media (max-width: 56.25em) {
      .row [class^="col-"] {
        width: 100% !important; } }
  @media (max-width: 56.25em) {
    .row [class*="col-md"]:nth-of-type(even) {
      margin-right: 3rem; } }
  @media (max-width: 37.5em) {
    .row [class*="col-md"] {
      width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc((100% - 3rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 3rem * 2) / 3); }
  .row .col-2-of-3 {
    width: calc( 2* ((100% - 3rem * 2) / 3) + 3rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3rem * 3) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 *((100% - 3rem * 3) / 4) + 3rem); }
  .row .col-3-of-4 {
    width: calc( 3 *((100% - 3rem * 3) / 4) + 3rem * 2); }
  @media (max-width: 56.25em) {
    .row .col-md-1-of-2 {
      width: calc((100% - 3rem) / 2) !important; } }
  @media (max-width: 37.5em) {
    .row .col-md-1-of-2 {
      width: 100% !important; } }
  @media (max-width: 56.25em) {
    .row .col-md-1-of-4 {
      width: calc((100% - 3rem * 3) / 4) !important; } }
  @media (max-width: 56.25em) {
    .row .col-md-2-of-4 {
      width: calc( 2 *((100% - 3rem * 3) / 4) + 3rem) !important; } }
  @media (max-width: 37.5em) {
    .row .col-hide-m {
      display: none; } }

.header {
  background: url("../img/ruler.png") repeat-x bottom #75C6BF;
  padding: 3rem 0;
  color: #fff;
  box-shadow: 0px 1px 0.7rem rgba(0, 0, 0, 0.5);
  margin-bottom: .3rem; }
  @media (max-width: 75em) {
    .header {
      padding: 2rem 0; }
      .header .flex-container {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
                flex-direction: column; } }
  .header__logo {
    display: inline-block;
    margin-right: 10rem; }
    @media (max-width: 75em) {
      .header__logo {
        margin: 0 0 1rem 0; } }
  .header__search {
    display: inline-block;
    margin-left: auto; }
    @media (max-width: 75em) {
      .header__search {
        margin: 0; } }
    @media (max-width: 45.25em) {
      .header__search {
        margin-top: 3rem; } }

.mixitup-layout__2col .mixitup > .mixitup__gallery:after {
  content: "";
  display: table;
  clear: both; }

.mixitup-layout__2col .mixitup > .mixitup__gallery .mix {
  width: calc(100%/2 - 3rem); }

.mixitup-layout__3col .mixitup > .mixitup__gallery:after {
  content: "";
  display: table;
  clear: both; }

.mixitup-layout__3col .mixitup > .mixitup__gallery .mix {
  width: calc(100%/3 - 3rem); }

.mixitup-layout__4col .mixitup > .mixitup__gallery:after {
  content: "";
  display: table;
  clear: both; }

.mixitup-layout__4col .mixitup > .mixitup__gallery .mix {
  width: calc(100%/4 - 3rem); }

.page-title {
  background-color: #EBEBEB;
  padding: 2rem .5rem;
  color: #7F8C8C;
  position: relative;
  border: 4px solid transparent; }
  .page-title .flex-container {
    -webkit-box-pack: justify;
            justify-content: space-between; }
  .page-title__heading {
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: 600; }
  .page-title__breadcrumbs-items {
    float: left;
    font-size: 1.2rem; }
    .page-title__breadcrumbs-items span {
      margin: 0 .7rem; }
  .page-title:after, .page-title:before {
    top: 100%;
    left: 15%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none; }
  .page-title:after {
    border-color: rgba(235, 235, 235, 0);
    border-top-color: #EBEBEB;
    border-width: 25px;
    margin-left: -25px; }
  .page-title:before {
    border-color: rgba(0, 0, 0, 0);
    border-top-color: transparent;
    border-width: 36px;
    margin-left: -36px; }

.sidebar {
  color: #E1524A;
  padding: 0 1rem; }
  .sidebar a {
    color: inherit; }
  .sidebar > *:not(:last-child) {
    margin-bottom: 3rem; }
  .sidebar__list {
    padding: 0 2rem; }
  .sidebar__headline {
    font-size: 1.6rem;
    font-weight: 800;
    text-transform: uppercase;
    color: #7F8C8C;
    margin-bottom: 2.2rem; }
  .sidebar__categories--item {
    display: block; }
    .sidebar__categories--item:not(:last-child) {
      margin-bottom: .7rem; }
  .sidebar__categories--link {
    font-size: 1.4rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-left: 1rem; }
    .sidebar__categories--link:hover {
      color: #75C6BF;
      text-decoration: underline; }
  .sidebar__recent .sidebar__list {
    padding: 0; }
  .sidebar__recent--item {
    display: block;
    font-weight: 600;
    font-size: 1.4rem;
    padding: 1.5rem 0;
    border-bottom: 1px solid #C1C7C8; }
    .sidebar__recent--item span {
      display: block;
      font-size: 1.2rem;
      color: #7F8B8B;
      font-weight: 400; }
      .sidebar__recent--item span:hover {
        text-decoration: none; }
  .sidebar__recent--post:hover {
    text-decoration: underline;
    color: #75C6BF; }
  .sidebar__tags--item {
    display: inline-block;
    padding: .3rem .7rem;
    background-color: #7F8B8B;
    color: #fff !important;
    font-size: 1.4rem;
    border-radius: 5px;
    margin: .3rem;
    -webkit-transition: all .3s;
    transition: all .3s; }
    .sidebar__tags--item:hover {
      background-color: #E1524A; }
  .sidebar__archive__list {
    padding: 0 2rem; }
  .sidebar__archive--item {
    padding-left: 1rem;
    display: block;
    margin-bottom: 1rem; }
    .sidebar__archive--item::before {
      color: #7F8B8B; }
    .sidebar__archive--item a {
      margin-left: 1rem;
      font-size: 1.5rem; }
      .sidebar__archive--item a:hover {
        color: #75C6BF;
        text-decoration: underline; }
  .sidebar__newsletter label {
    display: block;
    font-size: 1.4rem;
    margin-bottom: 1rem; }
  .sidebar__newsletter input[type='email'] {
    padding: 1rem;
    margin-bottom: 1.5rem;
    border-radius: 3px;
    outline: none;
    border: 1px solid lightgray;
    font-size: 1.5rem; }
  .sidebar__newsletter input[type="submit"] {
    font-size: 1.5rem;
    width: 100%;
    border: none;
    outline: none; }

.section-services {
  padding: 5rem 0; }
  .section-services__heading {
    margin-bottom: 6rem;
    line-height: 2; }

.section-showcase {
  background-color: #EBEBEB;
  padding-top: 5.5rem; }
  .section-showcase::before {
    height: 2rem; }

.section-testimonials {
  padding: 15rem 0 10rem 0; }
  @media (max-width: 37.5em) {
    .section-testimonials .flex-1 {
      width: 90% !important;
      text-align: center;
      padding: 0; }
    .section-testimonials .flex-2 {
      margin-bottom: 3rem; }
    .section-testimonials .flex-1:first-child {
      margin-bottom: 2.5rem; }
    .section-testimonials .flex-2 {
      -webkit-box-flex: 0;
              flex: 0 0 85%; } }

.section-about-us {
  padding: 4rem 0; }
  .section-about-us .heading-secondary {
    font-weight: 400;
    text-transform: none; }

.section-team {
  padding: 5rem 0;
  background-color: #EBEBEB; }
  .section-team::before {
    height: 2rem; }

.solution {
  padding: 5rem 0; }
  .solution .heading-secondary {
    font-weight: 400; }

.section-prices {
  padding: 8rem 0;
  background-color: #EBEBEB; }
  .section-prices::before {
    height: 2rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
